name: publish

on:
  # release:
  #   types: [released]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          package_json_file: package.json
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm build

      - name: Generate zip files for templates
        run: |
          mkdir -p zips
          for folder in templates/*/; do
              templatename=$(basename "$folder")
              # Ignore template names starting with underscore
              if [[ $templatename == _* ]]; then
                  echo "Skipping $templatename"
                  continue
              fi
              zipfile="zips/template-${templatename}.zip"

              # Create the zip file with template contents at the root level of the zip
              pushd "$folder" > /dev/null
              zip -r "../../$zipfile" . 
              popd > /dev/null

              echo "Created $zipfile"
          done

      - name: Upload templates to release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            zips/*.zip
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine npm tag
        id: determine-tag
        run: |
          ref=${GITHUB_REF_NAME}
          if [[ "$ref" =~ ^v[0-9]+\.[0-9]+\.[0-9]+- ]]; then
            # Extract prerelease tag from ref
            prerelease_tag=$(echo "$ref" | sed -e 's/^v[0-9]\+\.[0-9]\+\.[0-9]\+-\([^.]*\).*/\1/')
            echo "npm_tag=${prerelease_tag}" >> $GITHUB_ENV
          else
            # Use 'latest' for regular releases
            echo "npm_tag=latest" >> $GITHUB_ENV
          fi

      - name: Publish
        uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ secrets.NPM_TOKEN }}
          tag: ${{ env.npm_tag }}
